<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.astraapi.repository.SpecializationRepository">
    <insert id="save" parameterType="com.example.astraapi.entity.SpecializationEntity" useGeneratedKeys="true"
            keyProperty="entity.id">
        insert into public.specializations (step_id, title)
        values (#{entity.stepId}, #{entity.title})
    </insert>

    <select id="getAllWithSteps" resultMap="detailedSpecialization">
        select sp.id    as specializationId,
               sp.title as specializationTitle,
               st.id    as stepId,
               st.title as stepTitle
        from public.specializations sp
                 left join public.steps st on sp.step_id = st.id
        order by st.title, sp.title
    </select>

    <select id="getAllByStepId" resultType="com.example.astraapi.entity.SpecializationEntity">
        select *
        from public.specializations s
        where s.step_id = #{stepId}
    </select>

    <select id="getNotSelectedByExamId" resultMap="detailedSpecialization">
        select s.id       as specializationId,
               s.title    as specializationTitle,
               step.id    as stepId,
               step.title as stepTitle
        from public.specializations s
                 left join public.steps step on s.step_id = step.id
        where s.id not in (select t.specialization_id
                           from public.testings t
                           where t.exam_id = #{examId})
        order by s.id desc
    </select>

    <select id="search" resultType="com.example.astraapi.entity.SpecializationEntity">
        select s.id      as id,
               s.title   as title,
               s.step_id as stepId
        from public.specializations s
        where (#{testId}::bigint is null or s.id in (select sub.specialization_id
                                                     from public.subjects sub
                                                     where sub.id in (select ts.subject_id
                                                                      from public.tests_subjects ts
                                                                      where ts.test_id = #{testId}::bigint)))
          and (#{stepId}::bigint is null or s.step_id = #{stepId}::bigint)
        order by s.id desc
    </select>

    <resultMap id="detailedSpecialization" type="com.example.astraapi.entity.projection.StepSpecializationProjection">
        <id column="specializationId" property="id"/>
        <result column="specializationTitle" property="title"/>

        <association property="step" javaType="com.example.astraapi.entity.StepEntity">
            <id column="stepId" property="id"/>
            <result column="stepTitle" property="title"/>
        </association>
    </resultMap>
</mapper>
