<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.astraapi.repository.SubjectRepository">
    <insert id="save" parameterType="com.example.astraapi.entity.SubjectEntity" useGeneratedKeys="true"
            keyProperty="entity.id">
        insert into public.subjects (title, specialization_id)
        values (#{entity.title}, #{entity.specializationId});
    </insert>

    <select id="getAllSubjectsDetails" resultType="com.example.astraapi.entity.SubjectDetailEntity"
            resultMap="subjects">
        select sub.id     as subjectId,
               sub.title  as subjectTitle,
               spec.id    as specializationId,
               spec.title as specializationTitle,
               step.id    as stepId,
               step.title as stepTitle
        from public.subjects sub
                 left join public.specializations spec
                           on spec.id = sub.specialization_id
                 left join public.steps step
                           on spec.step_id = step.id
        order by sub.title, step.title
    </select>

    <update id="update">
        update public.subjects
        set title             = #{entity.title},
            specialization_id = #{entity.specializationId}
        where id = #{id}
    </update>

    <select id="getSubjects"
            resultType="com.example.astraapi.entity.projection.ImportSubjectProjection">
        select
        data.subjectId as subjectId,
        data.subjectTitle as subjectTitle,
        data.specializationId as specializationId,
        data.specializationTitle as specializationTitle,
        data.stepId as stepId,
        data.stepTitle as stepTitle,
        passed.importSubjectTitle as importSubjectTitle,
        passed.importSpecializationTitle as importSpecializationTitle,
        passed.importStepTitle as importStepTitle
        from (select
        unnest(array [
        <foreach collection="subjectTitles" item="title" separator=",">
            #{title}
        </foreach>
        ]::text[]) as importSubjectTitle,
        unnest(array [
        <foreach collection="specializationTitles" item="title" separator=",">
            #{title}
        </foreach>
        ]::text[]) as importSpecializationTitle,
        unnest(array [
        <foreach collection="stepTitles" item="title" separator=",">
            #{title}
        </foreach>
        ]::text[]) as importStepTitle
        ) passed
        left join lateral (
        select
        sub.id as subjectId,
        sub.title as subjectTitle,
        spec.id as specializationId,
        spec.title as specializationTitle,
        s.id as stepId,
        s.title as stepTitle
        from
        public.subjects sub
        left join public.specializations spec on spec.id = sub.specialization_id
        left join public.steps s on s.id = spec.step_id
        where sub.title ilike importSubjectTitle
        and (importSpecializationTitle is null or spec.title ilike importSpecializationTitle)
        and (importStepTitle is null or s.title ilike importStepTitle)
        ) data on true
    </select>

    <resultMap id="subjects" type="com.example.astraapi.entity.projection.SubjectDetailEntity">
        <id column="subjectId" property="id"/>
        <result column="subjectTitle" property="title"/>

        <association property="specialization"
                     javaType="com.example.astraapi.entity.projection.StepSpecializationProjection">
            <id column="specializationId" property="id"/>
            <result column="specializationTitle" property="title"/>

            <association property="step" javaType="com.example.astraapi.entity.StepEntity">
                <id column="stepId" property="id"/>
                <result column="stepTitle" property="title"/>
            </association>
        </association>
    </resultMap>
</mapper>
